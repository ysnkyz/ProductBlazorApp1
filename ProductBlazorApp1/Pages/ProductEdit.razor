@page "/products/edit/{id:int}"
@layout MainLayout
@using Microsoft.EntityFrameworkCore
@using ProductBlazorApp1.Models
@using ProductBlazorApp1.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<h3 class="mb-4">Ürün Düzenle</h3>

@if (product == null)
{
    <p><em>Ürün bulunamadı.</em></p>
}
else
{
    <EditForm Model="@product" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Ürün Adı</label>
            <InputText @bind-Value="product.Name" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Açıklama</label>
            <InputTextArea @bind-Value="product.Description" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Görsel URL</label>
            <InputText @bind-Value="product.ImageUrl" class="form-control" />
        </div>

        @if (!string.IsNullOrWhiteSpace(product.ImageUrl))
        {
            <div class="mb-3">
                <label>Mevcut Görsel</label><br />
                <img src="@product.ImageUrl"
                     alt="Ürün Görseli"
                     class="img-fluid rounded border"
                     style="max-height: 200px; object-fit: cover;" />
            </div>
        }

        <div class="mb-3">
            <label>Marka</label>
            <InputSelect @bind-Value="product.BrandId" class="form-control">
                <option value="">-- Marka Seçin --</option>
                @foreach (var brand in brands)
                {
                    <option value="@brand.Id">@brand.BrandName</option>
                }
            </InputSelect>
        </div>

        <div class="mb-3">
            <label>Kategori</label>
            <InputSelect @bind-Value="product.CategoryId" class="form-control">
                <option value="">-- Kategori Seçin --</option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.CategoryName</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Kaydet</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick='() => Navigation.NavigateTo("/products")'>İptal</button>
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }

    private Product? product;
    private List<Brand> brands = new();
    private List<Category> categories = new();

    protected override async Task OnInitializedAsync()
    {
        product = await DbContext.Products.FindAsync(id);
        if (product == null)
        {
            Navigation.NavigateTo("/products");
            return;
        }

        brands = await DbContext.Brands.OrderBy(b => b.BrandName).ToListAsync();
        categories = await DbContext.Categories.OrderBy(c => c.CategoryName).ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Products.Update(product!);
        await DbContext.SaveChangesAsync();
        Navigation.NavigateTo("/products");
    }
}
